import os
import sys

script_dir = os.path.dirname( __file__ )
helper_dir = os.path.join( script_dir, 'helper')
sys.path.append(helper_dir)
import functions as f


'''
THE PROBLEM
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the 
first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the 
even-valued terms.

THE ALGORITHM
A01; [collect upper_limit] upper_limit <-- argument 1
A02: [init previous] f_previous <-- 0
A03: [init current] f_current <-- 1
A04: [init sum] f_sum = 0
A05: [loop on f_next until  upper_limit] while f_next <-- f_previous + f_current <= upper_limit
    A06: [add if even] f_sum <--  f_sum + f_next if (f_next & 1) == 0 else  f_sum
    A07: [reset] f_previous <-- f_current,  f_current <-- f_next
A08: print sum

'''


def next_fibonacci(a, b):
    return a + b


upper_limit = int(sys.argv[1])
print('Find the sum of even fibonacci number below or equal to %s.' % upper_limit)
f_previous = 0
f_current = 1
f_next = next_fibonacci(f_previous, f_current)
f_sum = 0
while f_next <= upper_limit:
    f_sum = f_sum + f_next if (f_next & 1) == 0 else f_sum
    f_previous = f_current
    f_current = f_next
    f_next = next_fibonacci(f_previous, f_current)

print('Sum of even fibonacci number below or equal to %s = %s' % (upper_limit, f_sum))


# script_dir = os.path.dirname( __file__ )
# helper_dir = os.path.join( script_dir, 'helper')
# sys.path.append(helper_dir)
# for p in sys.path:
#     print(p)
